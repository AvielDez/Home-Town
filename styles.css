:root{
    /*Font Weights*/
    --thin: 100;
    --regular: 400;
    --SemiBold: 600;
    --Bold: 600;
    --ExtraBold: 800;

    /*Font*/
    --sora: 'Sora', sans-serif;

    /*Colors*/
    --light-color: hsl(0, 0%, 89%);
    --dark-color: hsl(0, 0%, 20%);
    --faded-orange: hsl(37, 55%, 52%);
    --bright-orange: hsl(37, 80%, 52%);

    
    /*Main Section Colors*/
    --saturation: 54%; /*Saturation Control for main sections*/
    --lightness: 52%;  /*Lightness Control for main sections*/

    --region-color:  hsl(37, var(--saturation), var(--lightness));
    --things-to-see-color: hsl(40, var(--saturation), var(--lightness));
    --great-food-color:  hsl(45, var(--saturation), var(--lightness));
    --activities-color:   hsl(50, var(--saturation), var(--lightness));


     /*BorderRadius*/
     --borderRadius: 35px;
}

/*General Styling & Control*/
*{
    margin: 0;
    box-sizing: border-box;
}

body, html {
    scroll-behavior: smooth;
    scroll-snap-type: mandatory;
    scroll-snap-points-y: repeat(100vh);
    scroll-snap-type: y mandatory;
    font-family: var(--sora);
  }
  
.scroll-snap{
    scroll-snap-align: start;
}

/*Header*/
header{
    height: 100vh;
    background: url(images/background-thingstosee-church_light.jpg);
    background-attachment: fixed;
    background-size: cover;
    color: var(--light-color);
    padding: 10px;
}

header h1{
    margin-top: 10rem;
    text-align: center;
    font-weight: var(--ExtraBold);
    font-size: 250px;
    text-transform: uppercase;
    color: var(--light-color);
    text-shadow: 0px 4px 10px rgba(0, 0, 0, 0.8);
}

header a{
    text-decoration: none;
    color: var(--light-color);
    font-weight: var(--SemiBold);
    font-size: 18px;
    text-shadow: 0 0 4px rgba(0, 0, 0, 1);
}

header a:hover{
    padding-bottom: 2px;
    font-size: 20px;
    border-bottom: 4px solid var(--light-color);
}
header ul{
    display: flex;
    gap: 36px;
    list-style-type: none;
}

.color-break-header{
    color: var(--bright-orange);
}

.nav-container-header{ /*Used to keep the Navigation at the top. If I used flex display to align the nav bar items and used 'position: fixed' it would break the 'display: flex'*/
  position: fixed;
  top: 20px;
  left: 75%;
  width: 100%;
  z-index: 1;
}

.home-a-header{
    position: fixed;
    top: 20px;
    display: inline;
    margin-left: 40px;
}

/*Main*/
#region{
    background: var(--region-color);
}

#things-to-see{
    background: var(--things-to-see-color);
}

#great-food{
    background: var(--great-food-color);
}
#activities{
    background: var(--activities-color);
}

/*Footer*/
footer{
    padding: 0 80px 0 80px;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 48px;
    background: var(--dark-color);
}
footer img{
    height: 500px;
    border-radius: var(--borderRadius) 0 0 var(--borderRadius);
}
.description-footer{
    height: 500px;
    background: var(--dark-color);
    border-top: 10px solid var(--faded-orange);
    border-right: 10px solid var(--faded-orange);
    border-bottom: 10px solid var(--faded-orange);
    border-radius: 0 var(--borderRadius) var(--borderRadius) 0;
}
.description-footer h2{
    text-align: center;
    color: var(--faded-orange);
    padding: 48px;
    font-size: 40px;
}
.description-footer h3{
    text-align: right;
    font-size: 25px;
    color: var(--faded-orange);
    padding: 2rem;
}
.description-footer p{
    text-align: left;
    color: var(--light-color);
    width: 30ch;
    font-size: 20px;
    padding: 16px;
    line-height: 2.5rem;
}
.quote-footer{
    color: var(--faded-orange);
    font-size: 30px;
}
/*General Section Styling*/
.section-style{
    padding: 0 80px 0 80px;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.section-style h2{
    margin-bottom: 64px;
    font-size: 48px;
    font-weight: var(--ExtraBold);
    color: var(--dark-color);
}
/*General Card Default States*/
.card-container{
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 90px;
}
.card-item{
    width: 275px;
    height: 425px;
    background: var(--light-color);
    border-width: 2px 0px 0px 2px;
    border-radius: var(--borderRadius);
    padding: 40px;
    color: var(--dark-color);
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.card-item h3{
    margin-bottom: 20px;
    transform: translateY(125px);
    animation-name: move-down;
    animation-duration: .5s;
    animation-fill-mode: forwards;
    text-align: center;
    font-weight: var(--ExtraBold);
    font-size: 25px;
}
.card-item span{
    font-weight: var(--regular);
}
.card-item p{
    font-size: 16px;
    animation-name: draw-para-out;
    animation-duration: .25s;
    animation-fill-mode: forwards;
}

/*Card Hover States*/
.card-item:hover h3{
    animation-name: move-up;
    animation-duration: .5s;
    animation-fill-mode: forwards;
}

.card-item:hover p{
    animation-name: draw-para-in;
    animation-duration: 1.5s;
    animation-fill-mode: forwards;
}
/*Card Animation Keyframes*/

@keyframes draw-para-in{ /*Shifts paragraph opacity to 1*/
    from{ opacity: 0;}
    to{ opacity: 1;}
}
@keyframes draw-para-out{ /*Shifts paragraph opacity to 0*/
    from{ opacity: 1;}
    to{ opacity: 0;}
}

@keyframes move-up{ /*Moves items up and underlines text*/
    from{
        border: none;
        transform: translateY(125px);
    }
    to{
        border-bottom: 4px solid var(--dark-color);
        transform: translateY(0px);
    }
}

@keyframes move-down{ /*Moves items down and removes underline from text*/
    from{
        border-bottom: 4px solid var(--dark-color);
        transform: translateY(0px);
    }
    to{

        border: none;
        transform: translateY(125px);
    }
}

/*Notes:
Animation hover states will trigger when website is first loaded up. This is not desirable.
I understand that the logic in which the CSS code is written is causing this to happen but I am
not sure any other way to get around this. 

For now the user will not see this happening because it's at the lower parts of website. In this case it works in my favor
but for future projects I need to know how to avoid this. 

This was a great exercise. I usually worry about making websites 
responsive and as a beginner this can get very overwhelming. It was nice to only worry about 
creating a desktop version that works well.

There was 3 major things I wanted to accomplish with this project
-create smooth card transition states using animations. 
-create a nav bar that would automatically scroll to each section on the webpage.
-Set up the website to scroll-snap when the user scrolls to next section. 

Bonus accomplishments
-learned a little bit of figma
-Got my hands dirty with some website design. 

I did intend on having the background image to change in each section depending on which card the user hovered over but 
if I am correct. I do not think it is possible to change the state of a parent element based on the child element you are
hovering over I could only effect the child elements if I hover over the parent element. 
I believe I need Javascript for this to work. 
*/
